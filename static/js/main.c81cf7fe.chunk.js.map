{"version":3,"sources":["Components/Navbar/TopNavbar.js","Components/Navbar/CurrencyRate.js","App.js","reportWebVitals.js","index.js"],"names":["TopNavbar","props","currency","selectedVal","onChangeCurrency","value","onChange","map","option","index","CurrencyRate","useState","setCurrency","firstVal","setfirstVal","secondVal","setSecondVal","useEffect","axios","method","url","then","response","json","data","console","log","base","Object","keys","rates","first","err","style","display","justifyContent","width","e","target","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAgBeA,MAdf,SAAmBC,GACf,IAAQC,EAA2CD,EAA3CC,SAAUC,EAAiCF,EAAjCE,YAAaC,EAAoBH,EAApBG,iBAC/B,OACI,8BACG,wBAAQC,MAAOF,EAAaG,SAAUF,EAAtC,SACKF,EAASK,KAAI,SAACC,EAAQC,YC8BvBC,MAjCf,WACI,MAAgCC,mBAAS,IAAzC,mBAAOT,EAAP,KAAiBU,EAAjB,KACA,EAAgCD,mBAAS,IAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,mBAAS,IAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAsBA,OAhBAC,qBAAU,WACNC,IAAM,CACFC,OAAO,MACPC,IAAK,0FACNC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAC1BF,MAAK,SAAAG,GACFC,QAAQC,IAAIF,GACZZ,EAAY,CAACY,EAAKG,MAAP,mBAAgBC,OAAOC,KAAKL,EAAKM,UAC5C,IAAMC,EAAQH,OAAOC,KAAKL,EAAKM,OAAO,GACtChB,EAAYU,EAAKG,MACjBX,EAAae,MAGhBV,MAAK,SAAAW,GAAG,OAAIP,QAAQC,IAAIM,QAC1B,IAGC,sBAAKC,MAAO,CAACC,QAAS,OAAQC,eAAe,eAAgBC,MAAO,OAApE,UACG,cAAC,EAAD,CAAYlC,SAAUA,EAAUC,YAAaU,IAC7C,cAAC,EAAD,CAAWX,SAAUA,EAAUC,YAAcY,EAAWX,iBAvBzC,SAACiC,GACnBrB,EAAaqB,EAAEC,OAAOjC,cCIfkC,MAXf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,IACA,0DCIOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c81cf7fe.chunk.js","sourcesContent":["import React from 'react'\n\nfunction TopNavbar(props) {\n    const { currency, selectedVal, onChangeCurrency} = props\n    return (\n        <div>\n           <select value={selectedVal} onChange={onChangeCurrency}>\n               {currency.map((option, index)=>{\n                 <options key={index}val={option}>{option}</options>\n               })}\n             \n           </select> \n        </div>\n    )\n}\n\nexport default TopNavbar\n","import axios from 'axios'\nimport React,{useState, useEffect} from 'react'\nimport TopNavbar from \"./TopNavbar\"\n\nfunction CurrencyRate() {\n    const [currency, setCurrency] = useState([])\n    const [firstVal, setfirstVal] = useState(\"\")\n    const [secondVal, setSecondVal] = useState(\"\")\n    \n    const handleCurrency =(e)=>{\n        setSecondVal(e.target.value)\n    }\n\n    useEffect(()=>{\n        axios({\n            method:\"GET\",\n            url: \"https://api.exchangeratesapi.io/v1/latest?access_key=79f8d2fa3a38f5adf9ed8da6c0e8667f\"\n        }).then(response=>response.json())\n        .then(data=>{\n            console.log(data)\n            setCurrency([data.base, ...Object.keys(data.rates)])\n            const first = Object.keys(data.rates)[0]\n            setfirstVal(data.base)\n            setSecondVal(first)\n        })\n\n        .then(err => console.log(err))\n    }, [])\n\n    return (\n        <div style={{display: \"flex\", justifyContent:'space-around', width: \"10%\"}}>\n           <TopNavbar  currency={currency} selectedVal={firstVal}/>\n           <TopNavbar currency={currency} selectedVal ={secondVal} onChangeCurrency={handleCurrency}/> \n        </div>\n    )\n}\n\nexport default CurrencyRate\n","import CurrencyRate from \"./Components/Navbar/CurrencyRate\";\nimport TopNavbar from \"./Components/Navbar/CurrencyRate\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <CurrencyRate />\n        <h1>E commerce Website</h1>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}